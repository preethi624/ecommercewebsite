<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Billing Information</title>
  
  <!-- Modernized CSS Styling -->
  <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap" rel="stylesheet">
  <style>
    body {
      font-family: 'Roboto', sans-serif;
      background-color: #f5f5f5;
      margin: 0;
      padding: 0;
      color: #333;
    }

    header {
      background-color: #007bff;
      padding: 1.5em;
      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    }

    header nav ul {
      list-style-type: none;
      padding: 0;
      margin: 0;
      display: flex;
      justify-content: space-around;
    }

    header nav ul li a {
      color: white;
      text-decoration: none;
      font-weight: 500;
      padding: 0.5em 1.5em;
      border-radius: 5px;
      transition: background-color 0.3s;
    }

    header nav ul li a:hover {
      background-color: #0056b3;
    }

    main {
      max-width: 900px;
      margin: 40px auto;
      padding: 30px;
      background-color: #ffffff;
      border-radius: 12px;
      box-shadow: 0 6px 15px rgba(0, 0, 0, 0.1);
    }

    h1 {
      text-align: center;
      font-size: 2.5em;
      margin-bottom: 20px;
      color: #007bff;
    }

    .billing-details, .billing-address, .billed-items {
      margin-bottom: 30px;
      border-bottom: 2px solid #e0e0e0;
      padding-bottom: 20px;
    }

    h2, h3, h4 {
      margin-bottom: 10px;
      font-weight: 600;
      color: #555;
    }

    .card {
      background-color: #f9f9f9;
      padding: 20px;
      border-radius: 8px;
      box-shadow: 0 3px 10px rgba(0, 0, 0, 0.05);
    }

    .card p {
      margin: 0;
      font-size: 1rem;
    }

    ul.billed-items {
      list-style: none;
      padding: 0;
    }

    ul.billed-items li {
      display: flex;
      align-items: center;
      padding: 15px;
      border: 1px solid #e0e0e0;
      margin-bottom: 15px;
      border-radius: 8px;
      background-color: #ffffff;
      transition: box-shadow 0.3s;
    }

    ul.billed-items li:hover {
      box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    }

    ul.billed-items li img {
      width: 100px;
      height: 100px;
      object-fit: cover;
      margin-right: 20px;
      border-radius: 5px;
    }

    ul.billed-items li strong {
      font-weight: 600;
      margin-right: 5px;
    }

    p {
      font-size: 1rem;
      margin-bottom: 10px;
    }

    .billing-summary {
      margin-top: 30px;
      padding: 20px;
      border: 1px solid #e0e0e0;
      border-radius: 8px;
      background-color: #f7f7f7;
    }

    button {
      background-color: #007bff;
      color: white;
      padding: 12px 24px;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      font-size: 1rem;
      font-weight: 500;
      transition: background-color 0.3s;
      display: block;
      width: 100%;
      margin-top: 20px;
    }

    button:hover {
      background-color: #0056b3;
    }

    footer {
      text-align: center;
      margin-top: 40px;
      padding: 20px;
    }

    footer a {
      text-decoration: none;
      color: #007bff;
      font-weight: 500;
    }

    footer a:hover {
      text-decoration: underline;
    }
  </style>
</head>
<body>
  
  <!-- Include the header -->
  <%- include("../partials/user/header") %>

  <main>
    <h1>Billing Information</h1>
    
    <div class="billing-details">
      <h2>Billing ID: <%= order.orderId %></h2>
      <p>Payment Status: <%= order.status %></p>
      <p>Billing Date: <%= new Date(order.invoiceDate).toLocaleDateString() %></p>
    </div>

    <div class="billing-address mb-4">
      <h4>Billing Address</h4>
      <div class="card p-3 mb-4">
        <% if (user.defaultAddress) { %>
          <% const defaultAddress = user.addresses.find(addr => addr._id.toString() === user.defaultAddress.toString()); %>
          <% if (defaultAddress) { %>
            <p>
              <strong><%= defaultAddress.fullName %></strong><br>
              <%= defaultAddress.address %>, <%= defaultAddress.city %>, <%= defaultAddress.country %> - <%= defaultAddress.postalCode %>
            </p>
          <% } else { %>
            <p>No default billing address set. Please <a href="/userProfile">add a billing address</a>.</p>
          <% } %>
        <% } else { %>
          <p>No billing address set. Please <a href="/userProfile">add a billing address</a>.</p>
        <% } %>
      </div>
    </div>

    <h3>Billed Items:</h3>
    <ul class="billed-items">
      <% order.orderedItems.forEach((item, index) => { %>
        <li>
          <img src="/uploads/product-images/<%= item.product.productImage[0] %>" alt="<%= item.product.productName %>">
          <div>
            <strong>Product:</strong> <%= item.product.productName %> - 
            <strong>Quantity:</strong> <%= item.quantity %> - 
            <strong>Price:</strong> Rs <%= item.price %>
          </div>
        </li>
      <% }); %>
    </ul>

    <div class="billing-summary">
      <h3>Billing Summary:</h3>
     <p><strong>Total Amount:</strong> Rs <%= order.totalPrice %></p>
      <p><strong>deduction (Including referral offer and coupon discount):</strong> Rs  <%= order.discount %></p>
      <p><strong>Amount to Pay:</strong> Rs  <%= order.finalAmount %></p>
    </div>
   
    <button id="rzp-button1">Pay Now</button>
  </main>

  <form method="POST" action="/order/codConfirmation" class="cod-btn">
    <button type="submit">Cash on delivery</button>
  </form>

  <footer>
    <a href="/">Return to Home</a>
  </footer>
  
</body>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script>
  var options = {
    "key": "rzp_test_4MBYamMKeUifHI",
    "amount": "<%=amount%>",
    "currency": "<%=currency%>",
    "order_id": "<%=razorpayOrderId%>",
    "handler": function(response) {
     
      window.location.href = `/order-confirmation?payment_id=${response.razorpay_payment_id}&order_id=${response.razorpay_order_id}`;
    },
    "theme": {
      "color": "#3399cc"
    }
  }

  var rzp1 = new Razorpay(options);
  document.getElementById('rzp-button1').onclick = function(e) {
    rzp1.open();
    e.preventDefault();
  }
</script>
</html>












<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Organic Store</title>

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link rel="stylesheet" href="/css/home.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">

    <style>
        .dropdown {
            position: relative;
            display: inline-block;
        }
        .dropdown-content {
            display: none;
            position: absolute;
            background-color: white;
            min-width: 160px;
            box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);
            z-index: 1000;
            right: 0;
        }
        .dropdown-content a {
            color: black;
            padding: 12px 16px;
            text-decoration: none;
            display: block;
            width: 100%;
        }
        .dropdown-content a:hover {
            background-color: #f1f1f1;
        }
        .dropdown:hover .dropdown-content {
            display: block;
        }
        .header {
            position: relative;
            z-index: 500;
           
        }
    </style>
</head>
<body>

<nav class="navbar navbar-expand-lg navbar-light bg-light">
    <div class="container-fluid">
        <a class="navbar-brand" href="/">
            <img src="images/organic-store-white-logo.png" alt="Logo" height="40">
        </a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav ms-auto">
                <li class="nav-item"><a href="#" class="nav-link">Everything</a></li>
                <li class="nav-item"><a href="#" class="nav-link">About</a></li>
                <li class="nav-item"><a href="#" class="nav-link">Contact</a></li>
                <li class="nav-item"><a href="/cart" class="nav-link">Cart</a></li>
                <li class="nav-item"><a href="/wallet" class="nav-link">Wallet</a></li>

                <% if (locals.user) { %>
                    <li class="nav-item dropdown">
                        <a href="#" class="nav-link dropdown-toggle" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false" style="color:white;">
                            <%= locals.user.username %>
                        </a>
                        <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="userDropdown">
                            <li><a class="dropdown-item" href="/userProfile">My Profile</a></li>
                            <li><a class="dropdown-item" href="/orders">Orders</a></li>
                            <li><a class="dropdown-item" href="/wishlist">Wishlist</a></li>
                            <li><a class="dropdown-item" href="/wallet">Wallet</a></li>
                            <li><a class="dropdown-item" href="/getCoupons">Coupons</a></li>
                            <li><a class="dropdown-item" href="/logOut">Log Out</a></li>
                        </ul>
                    </li>
                <% } else { %>
                    <li class="nav-item"><a href="/signup" class="nav-link">Signup</a></li>
                    <li class="nav-item"><a href="/login" class="nav-link">Login</a></li>
                <% } %>
            </ul>
        </div>
    </div>
</nav>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ZjDQ/Mzm3BhlKh3ggYgmOYZrCtDgxZ6M+iSNv+moSNwXkxphMI5TOtXx+glRXmG7" crossorigin="anonymous"></script>
</body>
</html>


const loadHomepage = async (req, res) => {
  try {
      const user = req.session.user;  
      const categories = await Category.find({ isListed: true });

      // Get page and limit from query params with default values
      const page = parseInt(req.query.page) || 1;
      const limit = 4; // Number of products per page
      const totalProducts = await Product.countDocuments({
          isBlocked: false,
          isDeleted: false,
          category: { $in: categories.map(category => category._id) }
      });
      
      const totalPages = Math.ceil(totalProducts / limit);

      let productData = await Product.find({
          isBlocked: false,
          isDeleted: false,
          category: { $in: categories.map(category => category._id) }
      })
      .sort({ createdAt: -1 }) // Sort by creation date (newest first)
      .limit(limit)
      .skip((page - 1) * limit)
      .populate('category');

      res.setHeader('Cache-Control', 'no-store');

      if (user) {
          const userData = await User.findById(user.id).populate('wishlist');

          if (!userData || userData.isBlocked) {
              return res.render("home", { products: productData, category: categories, currentPage: page ,totalPages});
          }

          // Render homepage for non-blocked users with wishlist
          return res.render("home", { user: userData, products: productData, wishlist: userData.wishlist, currentPage: page,totalPages });
      }

      // Render homepage for unauthenticated users
      return res.render("home", { products: productData, category: categories, currentPage: page,limit,totalPages,totalProducts });

  } catch (error) {
      console.error(error);
      res.status(500).send("Server error occurred while loading the homepage.");
  }
};



const updateCart=async(req,res)=>{
  try {
    const productId=req.params.productId;
    const{quantity}=req.body
    let cartItem = req.session.cart.find(item => item.product._id.toString() === productId);
    if (cartItem) {
      cartItem.quantity = Math.max(1, parseInt(quantity)); 
      const updatedTotal = (cartItem.product.regularPrice-((cartItem.product.regularPrice*cartItem.product.productOffer)/100)) * cartItem.quantity;
      const cartTotal = req.session.cart.reduce((total, item) => total + (item.product.salePrice * item.quantity), 0);
      res.json({ success: true, updatedTotal, cartTotal });
    }
    
  } catch (error) {
    
  }
}




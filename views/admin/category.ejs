<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Category Management</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
  <style>
    body {
      margin: 0;
      font-family: Arial, sans-serif;
      background-color:white;
    }

    
    .main-content {
      margin-left: 400px; 
     
      padding: 20px;
      margin-top: 50px; 
      background-color: white;
      min-height: 100vh;
    }

    .form-label {
      margin-bottom: 8px;
    }

    .form-control {
      width: 100%;
      padding: 8px;
      margin-bottom: 10px;
      border: 1px solid #ccc;
      border-radius: 5px;
      box-sizing: border-box;
    }

    .btn-primary {
      background-color: #007bff;
      color: #fff;
      border: 1px solid #007bff;
      border-radius: 5px;
      padding: 10px 20px;
      cursor: pointer;
    }

    .btn-primary:hover {
      background-color: #0056b3;
      border-color: #0056b3;
    }

    .table-responsive {
      width: 100%;
      margin-top: 20px;
    }

    .error-message {
      color: red;
    }

    .content-header {
      margin-bottom: 20px;
    }

    .text-white {
      color: white;
    }

    a.text-white {
      text-decoration: none;
    }

    button.btn {
      margin: 5px;
    }
  </style>
</head>

<body>
 
  <%- include("../../views/partials/admin/header") %>
  <div class="main-content">
 
    <div class="content-header">
      <h2>Category Management</h2>
    </div>

   
    <header class="text-center mb-20">
      <form action="/admin/category/" method="get" class="d-inline">
        <div class="input-group input-group-sm border border-1 border-grey rounded-pill" style="width: 500px; margin: 0 auto;">
          <input type="text" class="form-control border-0 rounded-pill mt-3" placeholder="Search categories" name="search" />
          <button class="btn" type="submit">Search</button>
        </div>
      </form>
    </header>

    
    <div class="card">
      <div class="card-body">
        <div class="row">
          <div class="col-md-3">
            <form method="post" action="/admin/addCategory" id="addCategoryForm">
              <div class="mb-4">
                <label for="product_name" class="form-label">Name</label>
                <input type="text" name="name" placeholder="Type here" class="form-control" id="product_name" />
                <div id="name-error" class="error-message"></div>
              </div>
              <div class="mb-4">
                <label class="form-label">Description</label>
                <textarea placeholder="Type here" name="description" class="form-control" id="descriptionId" ></textarea>
                <div id="description-error" class="error-message"></div>
              </div>
              <div class="d-grid">
                <button class="btn btn-success" type="submit">Create category</button>
              </div>
            </form>
          </div>

          <!-- Category Table -->
          <div class="col-md-8">
            <div class="table-responsive">
              <table class="table table-hover">
                <thead>
                  <tr>
                    <th class="text-center"></th>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Offer in %</th>
                    <th>Offer</th>
                    <th>Status</th>
                    <th>List/Unlist</th>
                    <th class="text-start">Edit</th>
                  </tr>
                </thead>
                <tbody>
                  <% cat.reverse().forEach((category, index) => { %>
                  <tr>
                    <td></td>
                    <td class="text-start"><%= category.name %></td>
                    <td class="text-start"><%= category.description %></td>
                    <td>
                      <% console.log(category.categoryOffer); %>
                     
                       <%if(category.categoryOffer){%>

                        <%=category.categoryOffer%>%
                        <%}else{%> 
                            0%
                            <%}%>
                    </td>
                    <td class="text-start">
                        <%if(category.categoryOffer===0){%>
                      <button class="btn btn-info" style="width: 100px">
                        <a href="#" class="text-white" onclick="addOffer('<%=category._id%>')">Add Offer</a>
                      </button>
                      <%}else{%>
                      <button class="btn btn-info" style="width: 100px">
                        <a href="#" class="text-white" onclick="removeOffer('<%=category._id%>')">Remove</a>
                      </button>
                      <%}%>
                      <td class="text-start">
                        <% if (category.isListed) { %> 
                          <span class="badge rounded-pill bg-success" style="width: 60px;">Listed</span>
                        <% } else { %>
                          <span class="badge rounded-pill bg-danger" style="width: 60px;">Unlisted</span>
                        <% } %>
                      </td>
                      
                    <td class="text-start">
                      <%if(category.isListed){%>
                      <button class="btn btn-danger" style="width: 70px">
                        <a href="/admin/listCategory?id=<%=category._id%>" class="text-white">Unlist</a>
                      </button>
                      <%}else{%>
                      <button class="btn btn-success" style="width: 70px">
                        <a href="/admin/unlistCategory?id=<%=category._id%>" class="text-white">List</a>
                      </button>
                      <%}%>
                    </td>
                    <td class="text-start">
                      <a href="/admin/editCategory?id=<%=category._id%>" class="btn btn-info text-white">Edit</a>
                    </td>
                    <td class="text-start">
                      <button  class="btn btn-info text-white" onclick="softDelete('<%=category._id%>')">softDelete</button>
                    </td>
                    
                  </tr>
                  <% }) %>
                </tbody>
              </table>
              <a href="/admin/soft">View Soft-Deleted Categories</a>

            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Pagination -->
    <div class="pagination-container">
      <% if (currentPage > 1) { %>
      <a href="?page=<%= currentPage - 1 %>">&laquo; Previous</a>
      <% } %>
      <% for (let i = 1; i <= totalPages; i++) { %>
      <% if (i === currentPage) { %>
      <span class="current-page"><%= i %></span>
      <% } else { %>
      <a href="?page=<%= i %>"><%= i %></a>
      <% } %>
      <% } %>
      <% if (currentPage < totalPages) { %>
      <a href="?page=<%= currentPage + 1 %>">Next &raquo;</a>
      <% } %>
    </div>
  </div>
  <div style="margin-left: 16%; height:50px">
    <%- include("../../views/partials/admin/footer") %>
  

  </div>
 
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
  <script>
    const form = document.getElementById('addCategoryForm');

    form.addEventListener('submit', async function(event) {
        event.preventDefault(); // Prevent default form submission

        let isValid = true; // Flag to track overall form validity

        // Validate Name
        const productName = document.getElementById("product_name").value.trim();
        const nameError = document.getElementById("name-error");
        nameError.innerText = ""; // Clear previous error message
        if (!productName) {
            nameError.innerText = "Product Name is required.";
            isValid = false;
        } else if (!/^[A-Za-z]+(?: [A-Za-z]+)*$/.test(productName)) {
            nameError.innerText = "Product Name must contain only alphabetic characters.";
            isValid = false;
        }

        // Validate Description
        const description = document.getElementById("descriptionId").value.trim();
        const descriptionError = document.getElementById("description-error");
        descriptionError.innerText = ""; // Clear previous error message
        if (!description) {
            descriptionError.innerText = "Description is required.";
            isValid = false;
        } else if (!/^[A-Za-z ]+$/.test(description)) {
            descriptionError.innerText = "Description must contain only alphabetic characters.";
            isValid = false;
        }

        // Stop form submission if validation fails
        if (!isValid) {
            return;
        }

        // Proceed with async submission if validation passes
        const formData = new FormData(event.target);
        const data = Object.fromEntries(formData);

        try {
            const response = await fetch(event.target.action, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data)
            });

            const result = await response.json();

            if (response.ok) {
                Swal.fire({
                    icon: 'success',
                    title: 'Category Added!',
                    text: result.message,
                    timer: 2000,
                    showConfirmButton: false
                }).then(() => {
                    window.location.reload(); // Reload the page to show the updated category list
                });
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Error!',
                    text: result.error || 'Something went wrong!',
                    confirmButtonText: 'OK'
                });
            }
        } catch (error) {
            Swal.fire({
                icon: 'error',
                title: 'Network Error!',
                text: 'Please try again later.',
                confirmButtonText: 'OK'
            });
        }
    });

    // Additional functions for handling offer addition, removal, and soft delete
    async function addOffer(categoryId) {
        const { value: amount } = await Swal.fire({
            title: "Offer in percentage",
            input: "number",
            inputLabel: "percentage",
            inputPlaceholder: "%"
        });
        if (amount) {
            try {
                const response = await fetch("/admin/addCategoryOffer", {
                    method: "POST",
                    headers: {
                        'Content-Type': "application/json",
                    },
                    body: JSON.stringify({
                        percentage: amount,
                        categoryId: categoryId
                    }),
                });
                const data = await response.json();
                if (response.ok && data.status === true) {
                    Swal.fire("Offer added", "The offer has been added", "success").then(() => {
                        location.reload();
                    });
                } else {
                    Swal.fire("Failed", data.message || "Adding offer failed", 'error');
                }
            } catch (error) {
                Swal.fire("Error", "An error occurred while adding offer", "error");
                console.log("Error", error);
            }
        }
    }

    async function removeOffer(categoryId) {
        try {
            const response = await fetch("/admin/removeCategoryOffer", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify({
                    categoryId: categoryId,
                })
            });
            const data = await response.json();
            if (response.ok && data.status === true) {
                Swal.fire("Offer removed", "The offer has been removed", "success").then(() => {
                    location.reload();
                });
            } else {
                Swal.fire("Failed", data.message || "Removing failed", "error");
            }
        } catch (error) {
            Swal.fire("Error", "An error occurred while removing the offer", "error");
            console.error("Error removing offer", error);
        }
    }

    async function softDelete(categoryId) {
        try {
            const response = await fetch("/admin/softDeleteCategory", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({ id: categoryId }),
            });
            const data = await response.json();
            if (response.ok && data.status) {
                Swal.fire("Deleted", "The category was soft deleted", "success").then(() => {
                    location.reload();
                });
            } else {
                Swal.fire("Failed", data.message || "Soft delete failed", "error");
            }
        } catch (error) {
            Swal.fire("Error", "An error occurred while deleting the category", "error");
        }
    }
</script>

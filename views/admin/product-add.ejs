<!DOCTYPE html>
<html lang="en">

<head>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .content-main {
            margin-left: 250px; 
            padding: 20px;
            margin-top: 50px; 
        }
        .navbar {
            background-color: green;
            padding: 10px;
            color: white;
            display: flex;
            justify-content: space-between;
            align-items: center;
            position: fixed;
            width: 100%;
            top: 0;
            z-index: 1000;
        }

        .navbar img {
            height: 40px;
        }

        .logout-btn {
            background-color: white;
            color: green;
            border: none;
            padding: 8px 16px;
            cursor: pointer;
            font-size: 14px;
            border-radius: 5px;
        }

        /* Sidebar styling */
        .sidebar {
            margin-top: 50px;
            width: 250px;
            background-color: green;
            height: 100vh;
            position: fixed;
            overflow: auto;
            padding-top: 20px;
        }

        .sidebar a {
            display: block;
            color: white;
            padding: 15px;
            text-decoration: none;
        }

        .sidebar a:hover {
            background-color: #575757;
        }

        .error-message {
            color: red;
            font-size: 0.875rem;
            margin-top: 0.25rem;
        }
    
        .thumbnails-container {
            display: flex;
            gap: 10px;
            overflow-x: auto;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
            margin-bottom: 20px;
        }
    
        .thumbnail img {
            max-width: 100px;
            max-height: 100px;
            border-radius: 5px;
            object-fit: cover;
        }
    
        .image-cropper {
            max-width: 300px;
            margin-bottom: 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
    
        .image-cropper img {
            max-width: 100%;
            border-radius: 5px;
        }
    
        .image-upload-section {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
        }
    
        .image-upload-card {
            width: 200px;
            text-align: center;
            border: 1px solid #ddd;
            padding: 10px;
            border-radius: 5px;
        }
    
        .image-upload-card img {
            max-width: 100%;
            max-height: 150px;
            margin-bottom: 10px;
            border-radius: 5px;
            object-fit: cover;
        }
    
        .btn-save {
            margin-top: 10px;
        }
    
        .form-section {
            margin-bottom: 30px;
        }
    </style>
    
</head>


<body>
    <%-include("../../views/partials/user/header")%>
    <!-- Sidebar -->
    <div class="sidebar">
        <a href="#">Dashboard</a>
        <a href="/admin/users">Customers</a>
        <a href="/admin/category">Category</a>
        <a href="#">Brands</a>
        <a href="/admin/addProducts">Add Product</a>
        <a href="/admin/product">Products</a>
        <a href="#">Coupon</a>
        <a href="#">Banner</a>
        <a href="#">Orders</a>
    </div>  


<section class="content-main">
   
    <div class="row">
        <div class="col-lg-9">
            <div class="content-header">
                <h2 class="content-title">Add New Product</h2>
            </div>
        </div>
        <div class="col-lg-9">
            <div class="card mb-4">
                <div class="card-body">
                    <form method="POST" action="/admin/addProducts" enctype="multipart/form-data" onsubmit="return validateForm()">
                        
                        <!-- Product Name -->
                        <div class="form-section mb-4">
                            <label for="product_name" class="form-label">Product Name</label>
                            <input type="text" name="productName" id="product_name" class="form-control border" placeholder="Enter product name">
                            <div id="productName-error" class="error-message"></div>
                        </div>

                        

                        <!-- Description -->
                        <div class="form-section mb-4">
                            <label for="descriptionid" class="form-label">Full Description</label>
                            <textarea name="description" id="descriptionid" class="form-control border" rows="4" placeholder="Type here"></textarea>
                            <div id="description-error" class="error-message"></div>
                        </div>

                        <!-- Price and Quantity -->
                        <div class="row">
                            <div class="col-lg-4">
                                <div class="form-section mb-4">
                                    <label for="regularPrice" class="form-label">Regular Price</label>
                                    <input type="text" name="regularPrice" id="regularPrice" class="form-control border" placeholder="Rs">
                                    <div id="regularPrice-error" class="error-message"></div>
                                </div>
                            </div>

                            <div class="col-lg-4">
                                <div class="form-section mb-4">
                                    <label for="salePrice" class="form-label">Sale Price</label>
                                    <input type="text" name="salePrice" id="salePrice" class="form-control border" placeholder="Rs">
                                    <div id="salePrice-error" class="error-message"></div>
                                </div>
                            </div>

                            <div class="col-lg-4">
                                <div class="form-section mb-4">
                                    <label for="quantity" class="form-label">Stock in Kg</label>
                                    <input type="text" name="quantity" id="quantity" class="form-control border" placeholder="Enter quantity">
                                    <div id="quantity-error" class="error-message"></div>
                                </div>
                            </div>
                        </div>

                        <!-- Color -->
                        <div class="form-section mb-4">
                            <label for="color" class="form-label">Color</label>
                            <input type="text" name="color" id="color" class="form-control border" placeholder="Enter color">
                            <div id="color-error" class="error-message"></div>
                        </div>

                        <!-- Category Selection -->
                        <div class="form-section mb-4">
                            <label for="category" class="form-label">Category</label>
                            <select class="form-select border" name="category" id="category">
                                <%for(let i=0;i<cat.length;i++){%>
                                
                                <option value="<%=cat[i].name%>"><%=cat[i].name%></option>

                               <%}%>
                            </select>
                            <div id="category-error" class="error-message"></div>
                        </div>

                        <!-- Image Upload Section -->
                        <div class="form-section mb-4">
                            <h4 class="mb-3">Choose Images</h4>
                            <div class="image-upload-section">
                                <!-- Image 1 -->
                                <div class="image-upload-card">
                                    <img src="" alt="Image 1" id="imgView1" />
                                    <input type="file" class="form-control mt-2" name="images" id="input1" accept="image/*" onchange="viewImage(event, 1)">
                                    <div id="images-error" class="error-message"></div>
                                </div>
                                <div class="image-cropper" id="cropper1" >
                                    <img id="croppedImg1" alt="">
                                    <button type="button" class="btn btn-sm btn-primary btn-save" id="saveButton1">Save</button>
                                </div>
                        
                                <!-- Image 2 -->
                                <div class="image-upload-card">
                                    <img src="" alt="Image 2" id="imgView2" />
                                    <input type="file" class="form-control mt-2" name="images" id="input2" accept="image/*" onchange="viewImage(event, 2)">
                                </div>
                                <div class="image-cropper" id="cropper2" >
                                    <img id="croppedImg2" alt="">
                                    <button type="button" class="btn btn-sm btn-primary btn-save" id="saveButton2">Save</button>
                                </div>
                        
                                <!-- Image 3 -->
                                <div class="image-upload-card">
                                    <img src="" alt="Image 3" id="imgView3" />
                                    <input type="file" class="form-control mt-2" name="images" id="input3" accept="image/*" onchange="viewImage(event, 3)">
                                </div>
                                <div class="image-cropper" id="cropper3">
                                    <img id="croppedImg3" alt="">
                                    <button type="button" class="btn btn-sm btn-primary btn-save" id="saveButton3">Save</button>
                                </div>
                        
                                <!-- Image 4 -->
                                <div class="image-upload-card">
                                    <img src="" alt="Image 4" id="imgView4" />
                                    <input type="file" class="form-control mt-2" name="images" id="input4" accept="image/*" onchange="viewImage(event, 4)">
                                </div>
                                <div class="image-cropper" id="cropper4">
                                    <img id="croppedImg4" alt="">
                                    <button type="button" class="btn btn-sm btn-primary btn-save" id="saveButton4">Save</button>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Submit Button -->
                        <div class="form-section">
                            <button class="btn btn-primary btn-md rounded-pill font-sm" type="submit" onclick="validateAndSubmit()">Publish</button>
                        </div>
                        
                        
                    </form>
                </div>
            </div>
        </div>
    </div>
</section>

<script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>
<script>
    function validateAndSubmit(){
        event.preventDefault();
        if(validateForm()){
            document.forms[0].submit()


        }
    }
    function viewImage1(event){
        document.getElementById("imgView1").src=URL.createObjectURL(event.target.files[0])
    }
    function viewImage2(event){
        document.getElementById("imgView2").src=URL.createObjectURL(event.target.files[0])
    }
    function viewImage3(event){
        document.getElementById("imgView3").src=URL.createObjectURL(event.target.files[0])
    }
    function viewImage4(event){
        document.getElementById("imgView4").src=URL.createObjectURL(event.target.files[0])
    }
    function viewImage(event,index){
        let input=event.target;
        let reader=new FileReader();
        reader.onload=function(){
            let dataURL=reader.result;
            let image=document.getElementById("imgView"+index);
            image.src=dataURL;
            let cropper=new Cropper(image,{
                aspectRatio:1,
                viewMode:1,
                guides:true,
                background:false,
                autoCropArea:1,
                zoomable:true
            });
            let cropperContainer=document.querySelector("#croppedImg"+index).parentNode;
            cropperContainer.style.display='block';
            let saveButton=document.querySelector('#saveButton${index}');
            saveButton.addEventListener('click',async function(){
                let croppedCanvas=cropper.getCroppedCanvas();
                let croppedImage=document.getElementById("croppedImg"+index)
                croppedImage.src=croppedCanvas.toDataURL('image/jpeg,1.0');
                let timestamp=new Date().getTime();
                let fileName=`cropped-img-${timestamp}-${index}.png`
                await croppedCanvas.toBlob(blob=>{
                    let input=document.getElementById('input'+index);
                    let imgFile=new File([blob],fileName,blob)
                    const fileList=new DataTransfer();
                    fileList.items.add(imgFile);input.files=fileList.files
                });
                cropperContainer.style.display='none';
                cropper.destroy()

            });
        };
        reader.readAsDataURL(input.files[0]);
    }
    const selectedImages=[];
    document.getElementById("input1").addEventListener("change",handleFileSelect);
    function handleFileSelect(event){
        const addedImagesContainer=document.getElementById("addedImagesContainer");
        addedImagesContainer.innerHTML="";
        const files=event.target.files
        for(let i=0;i<files.length;i++){
            const file=files[i];
            selectedImages.push(file);
            const thumbnail=document.createElement("div");
            thumbnail.classList.add("thumbnail");
            const img=document.createElement("img");
            img.src=URL.createObjectURL(file);
            img.alt="thumbnail";
            img.style.width="50px";
            img.style.height="auto";
            const removeIcon=document.createElement("span");
            removeIcon.classList.add("remove-icon");
            removeIcon.innerHTML="&times;";
            removeIcon.addEventListener("click",function(){
                const index=selectedImages.indexOf(file);
                if(index!==-1){
                    selectedImages.splice(index,1);

                }
                thumbnail.remove()
            });
            thumbnail.appendChild(img);
            thumbnail.appendChild(removeIcon);
            addedImagesContainer.appendChild(thumbnail)
        }
    }
    

    function validateForm() {
        clearErrorMessages();
        const name = document.getElementsByName('productName')[0].value;
        const description = document.getElementById('descriptionid').value;
       
        const price = document.getElementsByName('regularPrice')[0].value;
        const saleprice = document.getElementsByName('salePrice')[0].value;
        const color = document.getElementsByName('color')[0].value;
        const category = document.getElementsByName('category')[0].value;
        const images = document.getElementById('input1')
        const quantity=document.getElementsByName('quantity')[0].value
        let isValid = true
        if (name.trim() === "") {
displayErrorMessage('productName-error', 'Please enter a product name.');
isValid = false;
} else if (!/^[a-zA-Z\s]+$/.test(name.trim())) {
displayErrorMessage('productName-error', 'Product name should contain only alphabetic characters.');
isValid = false;
}
      
if (description.trim() === "") {
displayErrorMessage('description-error', 'Please enter a product description.');
isValid = false;
} else if (!/^[a-zA-Z\s]+$/.test(description.trim())) {
displayErrorMessage('description-error', 'Product description should contain only alphabetic characters.');
isValid = false;
}


     


        if ( parseInt(quantity) < 0) {
            displayErrorMessage('quantity-error', 'Please enter a valid non-negative quantity.');
            isValid = false;
        }




        if (!/^\d+(\.\d{1,2})?$/.test(price) || parseFloat(price) < 0) {
            displayErrorMessage('regularPrice-error', 'Please enter a valid non-negative price.');
            isValid = false;
        }




        if (!/^\d+(\.\d{1,2})?$/.test(saleprice) || parseFloat(saleprice) < 0) {
            displayErrorMessage('salePrice-error', 'Please enter a valid non-negative price.');
            isValid = false;
        }
        if (parseFloat(price) <= parseFloat(saleprice)) {
displayErrorMessage('regularPrice-error', 'Regular price must be greater than sale price.');
isValid = false;
}


        if (color.trim() === "") {
            displayErrorMessage('color-error', 'Please enter a color.');
            isValid = false;
        }


        if (images.files.length === 0) {
            displayErrorMessage("images-error",'Please select an image.');
            isValid = false;
        }
        return isValid;
    }


    function displayErrorMessage(elementId, message) {
        var errorElement = document.getElementById(elementId);
        errorElement.innerText = message;
        errorElement.style.display = "block";
    }


    function clearErrorMessages() {
        const errorElements = document.getElementsByClassName('error-message');
        Array.from(errorElements).forEach(element => {
            element.innerText = '';
        });
        const errorMessage = document.getElementById('errorMessage');


    }


        

    
</script>
</body>

</html>
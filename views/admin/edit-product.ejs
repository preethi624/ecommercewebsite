<!DOCTYPE html>
<html lang="en">

<head>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .content-main {
            margin-left: 250px; 
            padding: 20px;
            margin-top: 50px; 
        }
        .navbar {
            background-color: green;
            padding: 10px;
            color: white;
            display: flex;
            justify-content: space-between;
            align-items: center;
            position: fixed;
            width: 100%;
            top: 0;
            z-index: 1000;
        }

        .navbar img {
            height: 40px;
        }

        .logout-btn {
            background-color: white;
            color: green;
            border: none;
            padding: 8px 16px;
            cursor: pointer;
            font-size: 14px;
            border-radius: 5px;
        }

        /* Sidebar styling */
        .sidebar {
            margin-top: 50px;
            width: 250px;
            background-color: green;
            height: 100vh;
            position: fixed;
            overflow: auto;
            padding-top: 20px;
        }

        .sidebar a {
            display: block;
            color: white;
            padding: 15px;
            text-decoration: none;
        }

        .sidebar a:hover {
            background-color: #575757;
        }

        .error-message {
            color: red;
            font-size: 0.875rem;
            margin-top: 0.25rem;
        }
    
        .thumbnails-container {
            display: flex;
            gap: 10px;
            overflow-x: auto;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
            margin-bottom: 20px;
        }
    
        .thumbnail img {
            max-width: 100px;
            max-height: 100px;
            border-radius: 5px;
            object-fit: cover;
        }
    
        .image-cropper {
            max-width: 300px;
            margin-bottom: 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
    
        .image-cropper img {
            max-width: 100%;
            border-radius: 5px;
        }
    
        .image-upload-section {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
        }
    
        .image-upload-card {
            width: 200px;
            text-align: center;
            border: 1px solid #ddd;
            padding: 10px;
            border-radius: 5px;
        }
    
        .image-upload-card img {
            max-width: 100%;
            max-height: 150px;
            margin-bottom: 10px;
            border-radius: 5px;
            object-fit: cover;
        }
    
        .btn-save {
            margin-top: 10px;
        }
    
        .form-section {
            margin-bottom: 30px;
        }
    </style>
    
</head>


<body>
    <%-include("../../views/partials/user/header")%>
    <!-- Sidebar -->
    <div class="sidebar">
        <a href="#">Dashboard</a>
        <a href="admin/users">Customers</a>
        <a href="#">Category</a>
        <a href="#">Brands</a>
        <a href="#">Add Product</a>
        <a href="#">Products</a>
        <a href="#">Coupon</a>
        <a href="#">Banner</a>
        <a href="#">Orders</a>
    </div>  

<section class="content-main">

    <div class="row">
        <div class="col-lg-9">
            <div class="content-header">
                <h2 class="content-title">Edit Product</h2>
            </div>
        </div>
        <div class="col-lg-9">
            <div class="card mb-4">
                <div class="card-body">
                    <form method="POST" action="/admin/editProduct/<%=product._id%>" enctype="multipart/form-data"
                        onsubmit="return validateForm()" name="images">

                        <!-- Product Name -->
                        <div class="form-section mb-4">
                            <label for="product_name" class="form-label">Product Name</label>
                            <input type="text" name="productName" id="product_name" value="<%=product.productName%>"
                                class="form-control border" placeholder="Enter product name">
                            <div id="productName-error" class="error-message"></div>
                        </div>



                        <!-- Description -->
                        <div class="form-section mb-4">
                            <label for="descriptionid" class="form-label">Full Description</label>
                            <input name="description" value="<%=product.description%>" id="descriptionid"
                                class="form-control border" rows="4" placeholder="Type here">
                            <div id="description-error" class="error-message"></div>
                        </div>

                        <!-- Price and Quantity -->
                        <div class="row">
                            <div class="col-lg-4">
                                <div class="form-section mb-4">
                                    <label for="regularPrice" class="form-label">Regular Price</label>
                                    <input type="text" name="regularPrice" value="<%=product.regularPrice%>"
                                        id="regularPrice" class="form-control border" placeholder="$">
                                    <div id="regularPrice-error" class="error-message"></div>
                                </div>
                            </div>

                            <div class="col-lg-4">
                                <div class="form-section mb-4">
                                    <label for="salePrice" class="form-label">Sale Price</label>
                                    <input type="text" name="salePrice" value="<%=product.salePrice%>" id="salePrice"
                                        class="form-control border" placeholder="Rs">
                                    <div id="salePrice-error" class="error-message"></div>
                                </div>
                            </div>

                            <div class="col-lg-4">
                                <div class="form-section mb-4">
                                    <label for="quantity" class="form-label">Quantity</label>
                                    <input type="text" name="quantity" value="<%=product.quantity%>" id="quantity"
                                        class="form-control border" placeholder="Enter quantity">
                                    <div id="quantity-error" class="error-message"></div>
                                </div>
                            </div>
                        </div>

                        <!-- Color -->
                        <div class="form-section mb-4">
                            <label for="color" class="form-label">Color</label>
                            <input type="text" name="color" value="<%=product.color%>" id="color"
                                class="form-control border" placeholder="Enter color">
                            <div id="color-error" class="error-message"></div>
                        </div>

                        <!-- Category Selection -->
                        <div class="form-section mb-4">
                            <label for="category" class="form-label">Category</label>
                            <select class="form-select border" name="category" id="category">
                                <% for (let i=0; i < cat.length; i++) { %>
                                    <option value="<%= cat[i]._id %>" <%=product.category &&
                                        product.category._id.toString()===cat[i]._id.toString() ? 'selected' : '' %>>
                                        <%= cat[i].name %>
                                    </option>
                                    <% } %>
                            </select>


                            <div id="category-error" class="error-message"></div>
                        </div>
                        <div class="card mb-2">
                            <div class="card-header">
                                <h4>Choose images</h4>
                            </div>
                            <%for(let i=0;i<product.productImage.length;i++){%>

                                <div class="col-md-12">
                                    <div class="mb-4">

                                        <div class="col-12">
                                            <td>
                                                <input type="hidden" value="<%=product.productImage[i]%>"
                                                    id="imageDatas">
                                                <img class="rounded" style="width: 50px; height: 60px;"
                                                    src="/uploads/product-images/<%=product.productImage[i]%>" alt="">
                                                <i onclick="deleteSingleImage('<%= product.productImage[i] %>','<%= product._id %>')
                          " style="position: absolute; margin-left: .5rem; cursor: pointer;" class="fa-thin fa-x"></i>
                                            </td>
                                        </div>


                                    </div>
                                </div>
                                <%}%>


                                    <div class="card-body">
                                        <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                            <img src="" alt="" id="imgView1">
                                            <input class="form-control" type="file" name="images" id="input1"
                                                accept="image/png, image/jpeg, image/jpg"
                                                onchange="viewImage1(event), viewImage(event, 1)" multiple>
                                            <div id="images-error" class="error-message"></div>
                                        </div>
                                        <div class="image-cropper d-flex align-items-center"
                                            style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                            <img src="" id="croppedImg1" alt="">
                                            <button type="button" id="saveButton1"
                                                class="btn-sm btn-primary">Save</button>
                                        </div>
                                        <div class="form-check">
                                            <input class="form-check-input" type="checkbox" name="replaceImages"
                                                value="true" id="replaceImages">
                                            <label class="form-check-label" for="replaceImages">Replace Images</label>
                                        </div>

                                        
                                            <input type="hidden" name="existingImages"
                                                value="<%= product.productImage %>">


                                            <button class="btn btn-md rounded font-sm hover-up   btn-sm btn-primary "
                                                id="updatebtn" type="submit">Update</button>
                                    </div>  
                                  </div>

                                  
                    </form>
                </div>
            </div>
        </div>
    </div>
    </div>
</section>

   <script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    
<script>
   

    function validateForm() {
        let isValid = true;

        // Reset all error messages
        document.querySelectorAll('.error-message').forEach(error => error.innerText = '');

        // Validate Product Name
        const productName = document.getElementById("product_name").value.trim()
        const namePattern = /^[A-Za-z]+(?:\s[A-Za-z]+)*$/;

        if (!productName) {
            document.getElementById("productName-error").innerText = "Product Name is required.";
            isValid = false;
        } else if (!namePattern.test(productName)) {
            document.getElementById("productName-error").innerText = "Product Name must only contain alphabets and spaces (no leading or trailing spaces).";
            isValid = false;
        } else {
            document.getElementById("productName-error").innerText = ""; // Clear any previous error messages
        }

        // Validate Description
        const description = document.getElementById("descriptionid").value.trim();
        const descriptionPattern = /^(?=.*[A-Za-z])[\w\s!@#\$%\^\&*\)\(+=._-]+$/;
        if (!description) {
            document.getElementById("description-error").innerText = "Description is required.";
            isValid = false;
        }else if (!descriptionPattern.test(description)) {
            document.getElementById("description-error").innerText = "Description must contain alphabetic characters and may include numbers or special characters. It cannot be blank or contain only spaces.";
            isValid = false;
        } else {
            document.getElementById("description-error").innerText = ""; // Clear previous error message
        }

        // Validate Regular Price
        const regularPrice = document.getElementById("regularPrice").value.trim();
        if (!regularPrice || isNaN(regularPrice) || Number(regularPrice) <= 0||!/^\d+(\.\d+)?$/.test(regularPrice)) {
            document.getElementById("regularPrice-error").innerText = "Enter a valid Regular Price.";
            isValid = false;
        }else {
            document.getElementById("regularPrice-error").innerText = ""; // Clear previous error message
        }

        // Validate Sale Price
        const salePrice = document.getElementById("salePrice").value.trim();
        if (salePrice && (isNaN(salePrice) || Number(salePrice) < 0)) {
            document.getElementById("salePrice-error").innerText = "Enter a valid Sale Price.";
            isValid = false;
        }

        // Validate Quantity
        const quantity = document.getElementById("quantity").value.trim();
        if (!quantity || isNaN(quantity) || Number(quantity) < 0) {
            document.getElementById("quantity-error").innerText = "Enter a valid Quantity.";
            isValid = false;
        }

        // Validate Color
        const color = document.getElementById("color").value.trim();
        if (!color||!/^[A-Za-z\s]+$/.test(color) || color.length === 0) {
            document.getElementById("color-error").innerText = "Color is required and must contain only alphabetic characters (no special characters or numbers)..";
            isValid = false;
        }

        // Validate Category
        const category = document.getElementById("category").value;
        if (!category) {
            document.getElementById("category-error").innerText = "Category is required.";
            isValid = false;
        }

        // Validate Image Files
        const imageInputs = [input1, input2, input3, input4];
        let hasValidImages = true;
        imageInputs.forEach((input, index) => {
            if (input.files.length > 0) {
                const file = input.files[0];
                const allowedTypes = ["image/png", "image/jpeg", "image/jpg"];
                if (!allowedTypes.includes(file.type)) {
                    document.getElementById(`images-error`).innerText = "Only PNG, JPEG, and JPG formats are allowed.";
                    hasValidImages = false;
                }
            }
        });

        if (!hasValidImages) {
            isValid = false;
        }

        return isValid;
    }

          
           
    
    function viewImage1(event) {
               document.getElementById('imgView1').src = URL.createObjectURL(event.target.files[0])
           }
    
    
           function viewImage2(event) {
               document.getElementById('imgView2').src = URL.createObjectURL(event.target.files[0])
           }
    
    
           function viewImage3(event) {
               document.getElementById('imgView3').src = URL.createObjectURL(event.target.files[0])
           }
    
    
           function viewImage4(event) {
               document.getElementById('imgView4').src = URL.createObjectURL(event.target.files[0])
           }
    
    
    
    
           function viewImage(event, index) {
               let input = event.target;
               let reader = new FileReader();
               reader.onload = function () {
                   let dataURL = reader.result;
                   let image = document.getElementById('imgView' + index);
                   image.src = dataURL;
                   let cropper = new Cropper(image, {
                       aspectRatio: 1,
                       viewMode: 1,
                       guides: true,
                       background: false,
                       autoCropArea: 1,
                       zoomable: true
                   });
                   let cropperContainer = document.querySelector('#croppedImg' + index).parentNode;
                   cropperContainer.style.display = 'block';
                   let saveButton = document.querySelector('#saveButton' + index);
                   saveButton.addEventListener('click', async function () {
                       let croppedCanvas = cropper.getCroppedCanvas();
                       let croppedImage = document.getElementById("croppedImg" + index);
                       croppedImage.src = croppedCanvas.toDataURL('image/jpeg', 1.0);
                       let timestamp = new Date().getTime();
                       let fileName = `cropped-img-${timestamp}-${index}.png`;
                       await croppedCanvas.toBlob(blob => {
                           let input = document.getElementById('input' + index);
                           let imgFile = new File([blob], fileName, blob)
                           const fileList = new DataTransfer();
                           fileList.items.add(imgFile);
                           input.files = fileList.files
                       });
                       cropperContainer.style.display = 'none';
                   });
               };
               reader.readAsDataURL(input.files[0]);
           }
    
    
           const selectedImages = [];
       document.getElementById("imageInput").addEventListener("change", handleFileSelect);
    
    
           function handleFileSelect(event) {
               const addedImagesContainer = document.getElementById("addedImagesContainer");
               addedImagesContainer.innerHTML = "";
               const files = event.target.files;
               for (let i = 0; i < files.length; i++) {
                   const file = files[i];
                   selectedImages.push(file);
                   const thumbnail = document.createElement("div");
                   thumbnail.classList.add("thumbnail");
                   const img = document.createElement("img");
                   img.src = URL.createObjectURL(file);
                   img.alt = "thumbnail";
                   img.style.width = "50px";
                   img.style.height = "auto";
                   const removeIcon = document.createElement("span");
                   removeIcon.classList.add("remove-icon");
                   removeIcon.innerHTML = "&times;";
                   removeIcon.addEventListener("click", function () {
                       const index = selectedImages.indexOf(file);
                       if (index !== -1) {
                           selectedImages.splice(index, 1);
                       }
                       thumbnail.remove();
                   });
    
                   const deleteIcon = document.createElement("button");
           deleteIcon.classList.add("delete-icon");
           deleteIcon.innerText = "Delete Image";
           deleteIcon.addEventListener("click", function () {
               const imageId = 'image_id_here'; // Replace with actual image ID if available
               const productId = 'product_id_here'; // Replace with actual product ID if available
               deleteSingleImage(imageId, productId);
           });
                   thumbnail.appendChild(img);
                   thumbnail.appendChild(removeIcon);
                   thumbnail.appendChild(deleteIcon);
                   addedImagesContainer.appendChild(thumbnail);
               }
           };
           function deleteSingleImage(imageId,productId){
            
           
            
            console.log("deleteSingleImage function triggered");
            $.ajax({
                url:"/admin/deleteImage",
                method:'post',
                data:{imageNameToServer:imageId,productIdToServer:productId},
                success:((response)=>{
                    if(response.status===true){
                        window.location.reload()
                    }
                })
            })
           }
           
       </script>
  
   
</body>
</html>


               
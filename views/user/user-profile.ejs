
<%- include("../../views/partials/user/header") %>

<div class="container mt-5">
  <!-- User Info Section -->
  <div class="row mb-4">
    <div class="col-md-6">
      <h1 class="mb-3">User Profile</h1>
      <h3>Referral Code:<%=user.referralCode%></h3>
      <p><strong>Name:</strong> <%= user.username %></p>
      <p><strong>Email:</strong> <%= user.email %></p>
      <a href="/wallet" class="btn btn-info">Go to Wallet</a>
    </div>
  </div>
  
  <!-- Addresses Section -->
  <div class="row mb-5">
    <div class="col-md-12">
      <h2>Addresses</h2>
      <% if(user.addresses && user.addresses.length > 0) { %>
        <% user.addresses.forEach(address => { %>
          <div class="card mb-3">
            <div class="card-body">
              <p><%= address.fullName %>, <%= address.address %>, <%= address.city %>, <%= address.country %> - <%= address.postalCode %></p>
               <!-- Default Address Badge -->
               <% if (user.defaultAddress && address._id.toString() === user.defaultAddress.toString()) { %>
                <span class="badge bg-success">Default Address</span>
              <% } else { %>
                <form action="/profile/set-default-address/<%= address._id %>" method="POST" class="d-inline">
                  <button type="submit" class="btn btn-outline-success">Set as Default</button>
                </form>
              <% } %>
              
              <form action="/profile/edit-address/<%= address._id %>" method="POST" class="row g-3" id="edit-address-form">
                <div class="col-md-3">
                  <input type="text" class="form-control" name="fullName" value="<%= address.fullName %>" placeholder="Full Name" id="editFullName">
                </div>
                <div class="col-md-3">
                  <input type="text" class="form-control" name="address" value="<%= address.address %>" placeholder="Address" id="editAddress">
                </div>
                <div class="col-md-2">
                  <input type="text" class="form-control" name="city" value="<%= address.city %>" placeholder="City" id="editCity">
                </div>
                <div class="col-md-2">
                  <input type="text" class="form-control" name="postalCode" value="<%= address.postalCode %>" placeholder="Postal Code" id="editPostalCode">
                </div>
                <div class="col-md-2">
                  <input type="text" class="form-control" name="country" value="<%= address.country%>" placeholder="country" id="editCountry">
                </div>
                <div class="col-md-2">
                  <button type="submit" class="btn btn-primary w-100">Edit</button>
                </div>
              </form>
              <div id="editAddressErrors" style="color:red;"></div> 

              <form action="/profile/delete-address/<%= address._id %>" method="POST" class="mt-2"  onsubmit="return confirmDelete(this,'address')">
                <button type="submit" class="btn btn-danger">Delete</button>
              </form>
            </div>
          </div>
        <% }) %>
      <% } else { %>
        <p>No addresses found.</p>
      <% } %>
      
      <!-- Add Address Form -->
      <h4 class="mt-4">Add New Address</h4>
      <form id="address-form" action="/profile/add-address" method="POST" class="row g-3">
          <div class="col-md-4">
              <input type="text" name="fullName[]" class="form-control" placeholder="Full Name" required>
          </div>
          <div class="col-md-4">
              <input type="text" name="address[]" class="form-control" placeholder="Address" required>
          </div>
          <div class="col-md-3">
              <input type="text" name="city[]" class="form-control" placeholder="City" required>
          </div>
          <div class="col-md-2">
              <input type="text" name="postalCode[]" class="form-control" placeholder="Postal Code" required>
          </div>
          <div class="col-md-3">
              <input type="text" name="country[]" class="form-control" placeholder="Country" required>
          </div>
          <div class="col-md-12">
              <button type="submit" class="btn btn-success">Add Address</button>
              <button type="button" id="add-address-btn" class="btn btn-primary">Add Another Address</button>
          </div>
          <div id="addAddressErrors" style="color:red;"></div>

      </form>
      
      <!-- Container for dynamically added addresses -->
      <div id="additional-addresses"></div>
      
    </div>
  </div>

  

  <!-- Forgot Password Section -->
  <div class="row">
    <div class="col-md-6">
      <h2>Forgot Password</h2>
      <form action="/forgot-email-valid" method="POST" class="mb-4">
        <div class="input-group">
          <input type="email" name="email" class="form-control" placeholder="Enter your email" required>
          <button type="submit" class="btn btn-secondary">Send Reset Link</button>
          <div id="forgotPasswordErrors" style="color:red;"></div> <!-- Display error messages here -->
        </div>
      </form>
    </div>
  </div>
  

</div>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


<script>

  
  function confirmDelete(form,item) {
    Swal.fire({
      title: `Are you sure you want to delete this ${item}?`,
      text: "This action cannot be undone!",
      icon: "warning",
      showCancelButton: true,
      confirmButtonColor: "#d33",
      cancelButtonColor: "#3085d6",
      confirmButtonText: "Yes, delete it!",
      cancelButtonText: "Cancel"
    }).then((result) => {
      if (result.isConfirmed) {
        form.submit(); 
      }
    });
    return false; 
  }

  document.getElementById('add-address-btn').addEventListener('click', function() {
      const additionalAddresses = document.getElementById('additional-addresses');
      const newAddressForm = `
          <div class="row g-3 mt-3">
              <div class="col-md-4">
                  <input type="text" name="fullName[]" class="form-control" placeholder="Full Name" required>
              </div>
              <div class="col-md-4">
                  <input type="text" name="address[]" class="form-control" placeholder="Address" required>
              </div>
              <div class="col-md-3">
                  <input type="text" name="city[]" class="form-control" placeholder="City" required>
              </div>
              <div class="col-md-2">
                  <input type="text" name="postalCode[]" class="form-control" placeholder="Postal Code" required>
              </div>
              <div class="col-md-3">
                  <input type="text" name="country[]" class="form-control" placeholder="Country" required>
              </div>
              <div class="col-md-12">
                  <button type="button" class="btn btn-danger remove-address">Remove Address</button>
              </div>
          </div>
      `;
      additionalAddresses.insertAdjacentHTML('beforeend', newAddressForm);
  });

  // Event delegation to handle removal of dynamically added address forms
  document.getElementById('additional-addresses').addEventListener('click', function(event) {
      if (event.target.classList.contains('remove-address')) {
          event.target.closest('.row').remove();
      }
  });
  document.getElementById('address-form').addEventListener('submit', function(event) {
    let errors = [];
    let formValid = true;
    const fullNames = document.getElementsByName('fullName[]');
    const addresses = document.getElementsByName('address[]');
    const cities = document.getElementsByName('city[]');
    const postalCodes = document.getElementsByName('postalCode[]');
    const countries = document.getElementsByName('country[]');

    // Regex for address validation (should include letters)
    const addressRegex = /[A-Za-z]/;

    // Regex for postal code (alphanumeric characters only)
    const postalCodeRegex = /^[A-Za-z0-9 ]+$/;

    for (let i = 0; i < fullNames.length; i++) {
        const fullName = fullNames[i].value.trim();
        const address = addresses[i].value.trim();
        const city = cities[i].value.trim();
        const postalCode = postalCodes[i].value.trim();
        const country = countries[i].value.trim();

        // Validate full name
        if (!fullName) {
            errors.push(`Full name is required for address #${i + 1}.`);
            formValid = false;
        }

        // Validate address (must contain letters, cannot be all numbers)
        if (!address) {
            errors.push(`Address is required `);
            formValid = false;
        } else if (!addressRegex.test(address)) {
            errors.push(`Address must contain at least some letters  (cannot be numbers only).`);
            formValid = false;
        }

        // Validate city
        if (!city) {
            errors.push(`City is required `);
            formValid = false;
        }

        // Validate postal code
        if (!postalCode) {
            errors.push(`Postal code is required .`);
            formValid = false;
        } else if (!postalCodeRegex.test(postalCode)) {
            errors.push(`Postal code must contain only letters, numbers, and spaces .`);
            formValid = false;
        }

        // Validate country
        if (!country) {
            errors.push(`Country is required for address .`);
            formValid = false;
        }
    }

    // If there are errors, prevent form submission and display errors
    if (!formValid) {
        event.preventDefault(); // Prevent form submission
        document.getElementById('addAddressErrors').innerHTML = errors.join('<br>'); // Display error messages
    } else {
        document.getElementById('addAddressErrors').innerHTML = ''; // Clear error messages if no errors
    }
});
document.getElementById('forgot-password-form').addEventListener('submit', function(event) {
  const emailInput = document.getElementById('email').value.trim();
  const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/; // Regex for validating email
  let errors = [];

  // Validate email format
  if (!emailInput) {
    errors.push('Email is required.');
  } else if (!emailRegex.test(emailInput)) {
    errors.push('Please enter a valid email address.');
  }

  // If there are errors, prevent form submission and display errors
  if (errors.length > 0) {
    event.preventDefault(); // Prevent form submission
    document.getElementById('forgotPasswordErrors').innerHTML = errors.join('<br>'); // Display error messages
  } else {
    document.getElementById('forgotPasswordErrors').innerHTML = ''; // Clear error messages if no errors
  }
});
document.addEventListener('DOMContentLoaded', function() {
  document.getElementById('edit-address-form').addEventListener('submit', function(event) {
      const fullName = document.getElementById('editFullName').value.trim();
      const address = document.getElementById('editAddress').value.trim();
      const city = document.getElementById('editCity').value.trim();
      const postalCode = document.getElementById('editPostalCode').value.trim();
      const country = document.getElementById('editCountry').value.trim();
      let errors = [];

      // Validate full name
      if (!fullName) {
          errors.push('Full name is required.');
      }

      // Validate address (must contain letters, cannot be all numbers)
      const addressRegex = /[A-Za-z]/;
      if (!address) {
          errors.push('Address is required.');
      } else if (!addressRegex.test(address)) {
          errors.push('Address must contain at least some letters (cannot be numbers only).');
      }

      // Validate city
      if (!city) {
          errors.push('City is required.');
      }

      // Validate postal code (basic check to ensure it's alphanumeric)
      const postalCodeRegex = /^[A-Za-z0-9 ]+$/;
      if (!postalCode) {
          errors.push('Postal code is required.');
      } else if (!postalCodeRegex.test(postalCode)) {
          errors.push('Postal code must contain only letters, numbers, and spaces.');
      }

      // Validate country
      if (!country) {
          errors.push('Country is required.');
      }

      // If there are errors, prevent form submission and display errors
      if (errors.length > 0) {
          event.preventDefault(); // Prevent form submission
          document.getElementById('editAddressErrors').innerHTML = errors.join('<br>'); // Display error messages
      } else {
          document.getElementById('editAddressErrors').innerHTML = ''; // Clear error messages if no errors
      }
  });
});
</script>

<%- include("../../views/partials/user/footer") %>
